
// Block definition (there may be more than one block per file)
FUNCTION_BLOCK tipper

// Define input variables
VAR_INPUT
    velocity : REAL;
    distance : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    tension : REAL;
END_VAR

// Fuzzify input variable 'velocity'
FUZZIFY velocity
    TERM low := (0, 1) (15, 1) (30, 0) ; 
    TERM normal := (22, 0) (40,1) (80,0);
    TERM fast := (70, 0) (100, 1) (120, 1);
END_FUZZIFY

// Fuzzify input variable 'distance'
FUZZIFY distance
    TERM near := (0, 1) (700, 1) (1000,0) ;
    TERM nearmedium := (900,0) (1600, 1) (2000, 0);
    TERM far := (1900, 0) (2500, 1) (3000, 1);
END_FUZZIFY

// Defzzzify output variable 'tension'
DEFUZZIFY tension
    TERM donotbrake := (0,0) (500, 1) (800, 0);
    TERM lighbrake := (600,0) (1200, 1) (1600, 0);
    TERM hardbrake := (1500, 0) (2000, 1) (2500, 1);
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF velocity IS fast AND distance IS near 
                THEN tension IS hardbrake;

    RULE 2 : IF velocity IS normal AND distance IS nearmedium
                THEN tension IS lighbrake; 

    RULE 3 : IF velocity IS low AND distance IS far 
                THEN tension is donotbrake;
END_RULEBLOCK

END_FUNCTION_BLOCK